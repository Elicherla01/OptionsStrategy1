//@version=6
//Author Ravindra Elicherla https://x.com/Ravindra_PE
indicator("Dynamic SMA Supertrend Indicator", overlay=true)

// Input parameters
st_length = input.int(14, "Supertrend ATR Length", minval=1)
st_multiplier = input.float(4.0, "Supertrend Multiplier", minval=0.1, step=0.1)

// Calculate dynamic SMA period based on timeframe
trading_minutes = 375
timeframe_minutes = timeframe.multiplier
sma_period = math.round(trading_minutes / timeframe_minutes)

// Ensure minimum SMA period of 2
sma_period := math.max(sma_period, 2)

// Calculate SMA
sma_line = ta.sma(close, sma_period)

// Calculate Supertrend
[supertrend, direction] = ta.supertrend(st_multiplier, st_length)

// Calculate exit levels (for visualization only - not used in logic)
// sma_exit_long = sma_line * 0.99   // 1% below SMA for reference
// sma_exit_short = sma_line * 1.01  // 1% above SMA for reference

// Signal conditions
buy_condition = close > supertrend and close > sma_line
sell_condition = close < supertrend and close < sma_line

// Exit conditions
long_exit_condition = close < sma_line  // Exit buy when price goes below SMA
short_exit_condition = close > sma_line // Exit sell when price goes above SMA

// State tracking variables
var int position_state = 0  // 0 = no position, 1 = long, -1 = short

// Update position state
if position_state == 0 and buy_condition
    position_state := 1
else if position_state == 1 and long_exit_condition
    position_state := 0
else if position_state == 0 and sell_condition
    position_state := -1
else if position_state == -1 and short_exit_condition
    position_state := 0

// Signal detection (only when state changes)
buy_signal = position_state == 1 and position_state[1] == 0
sell_signal = position_state == -1 and position_state[1] == 0
long_exit_signal = position_state == 0 and position_state[1] == 1
short_exit_signal = position_state == 0 and position_state[1] == -1

// Plot indicators
plot(sma_line, color=color.blue, linewidth=2, title="Dynamic SMA")
plot(supertrend, color=direction < 0 ? color.green : color.red, linewidth=2, title="Supertrend")

// Plot exit levels (for reference only) - REMOVED
// plot(sma_exit_long, color=color.orange, style=plot.style_line, title="SMA -1% Reference")
// plot(sma_exit_short, color=color.purple, style=plot.style_line, title="SMA +1% Reference")

// Plot buy/sell signals
plotshape(buy_signal, style=shape.labelup, location=location.belowbar, color=color.green, text="Bull Put Spread", textcolor=color.white, size=size.small)
plotshape(sell_signal, style=shape.labeldown, location=location.abovebar, color=color.red, text="Bear Call Spread", textcolor=color.white, size=size.small)

// Plot exit signals
plotshape(long_exit_signal, style=shape.xcross, location=location.belowbar, color=color.red, text="EXIT Bull PS", textcolor=color.orange, size=size.tiny)
plotshape(short_exit_signal, style=shape.xcross, location=location.abovebar, color=color.green, text="EXIT Bear CS", textcolor=color.orange, size=size.tiny)

// Display information table
var table info_table = table.new(position.top_right, 2, 5, bgcolor=color.white, border_width=1)
if barstate.islast
    table.cell(info_table, 0, 0, "Timeframe", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 0, str.tostring(timeframe_minutes) + "M", text_color=color.black)
    table.cell(info_table, 0, 1, "SMA Period", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 1, str.tostring(sma_period), text_color=color.black)
    table.cell(info_table, 0, 2, "Supertrend", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 2, str.tostring(st_length) + "," + str.tostring(st_multiplier), text_color=color.black)
    table.cell(info_table, 0, 3, "Exit %", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 3, "1%", text_color=color.black)
    table.cell(info_table, 0, 4, "Position", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 4, position_state == 1 ? "LONG" : position_state == -1 ? "SHORT" : "FLAT", 
              text_color=position_state == 1 ? color.green : position_state == -1 ? color.red : color.black)
