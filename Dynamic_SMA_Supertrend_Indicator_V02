//@version=6
//Author Ravindra Elicherla https://x.com/Ravindra_PE
indicator("Dynamic SMA Supertrend Indicator v2", overlay=true)

// Input parameters
st_length = input.int(14, "Supertrend ATR Length", minval=1)
st_multiplier = input.float(4.0, "Supertrend Multiplier", minval=0.1, step=0.1)
entry_percentage = input.float(1.0, "SMA entry_percentage Percentage", minval=0.1, maxval=10.0, step=0.1)

// Calculate dynamic SMA period based on timeframe
trading_minutes = 375
timeframe_minutes = timeframe.multiplier
sma_period = math.round(trading_minutes / timeframe_minutes)

// Ensure minimum SMA period of 2
sma_period := math.max(sma_period, 2)

// Calculate SMA
sma_line = ta.sma(close, sma_period)

// Calculate Supertrend
[supertrend, direction] = ta.supertrend(st_multiplier, st_length)

// Calculate exit levels (used in exit logic)
sma_entry_long = sma_line    // SMA line for long entry
sma_entry_short = sma_line   // SMA line for short entry

// Signal conditions
buy_condition = close > supertrend and close > sma_entry_long
sell_condition = close < supertrend and close < sma_entry_short

// Exit conditions
long_exit_condition = close < supertrend    // Exit bull put spread when price goes below Supertrend
short_exit_condition = close > supertrend   // Exit bear call spread when price goes above Supertrend

// State tracking variables
var int position_state = 0  // 0 = no position, 1 = long, -1 = short

// Update position state
if position_state == 0 and buy_condition
    position_state := 1
else if position_state == 1 and long_exit_condition
    position_state := 0
else if position_state == 0 and sell_condition
    position_state := -1
else if position_state == -1 and short_exit_condition
    position_state := 0

// Signal detection (only when state changes)
buy_signal = position_state == 1 and position_state[1] == 0
sell_signal = position_state == -1 and position_state[1] == 0
long_exit_signal = position_state == 0 and position_state[1] == 1
short_exit_signal = position_state == 0 and position_state[1] == -1

// Plot indicators
plot(sma_line, color=color.blue, linewidth=2, title="Dynamic SMA")
plot(supertrend, color=direction < 0 ? color.green : color.red, linewidth=2, title="Supertrend")

// Plot buy/sell signals with larger size and better visibility
plotshape(buy_signal, style=shape.triangleup, location=location.belowbar, color=color.new(color.green, 0), text="Bull Put Spread", textcolor=color.rgb(67, 230, 108), size=size.normal)
plotshape(sell_signal, style=shape.triangledown, location=location.abovebar, color=color.new(color.red, 0), text="Bear Call Spread", textcolor=color.rgb(219, 82, 82), size=size.normal)

// Plot exit signals with better visibility
plotshape(long_exit_signal, style=shape.xcross, location=location.belowbar, color=color.new(color.red, 0), text="EXIT Bull PS", textcolor=color.rgb(221, 225, 24), size=size.small)
plotshape(short_exit_signal, style=shape.xcross, location=location.abovebar, color=color.new(color.red, 0), text="EXIT Bear CS", textcolor=color.rgb(221, 225, 24), size=size.small)

// Alternative: Plot as background colors for better visibility
bgcolor(buy_signal ? color.new(color.green, 90) : na, title="Buy Signal Background")
bgcolor(sell_signal ? color.new(color.red, 90) : na, title="Sell Signal Background")
bgcolor(long_exit_signal or short_exit_signal ? color.new(color.orange, 95) : na, title="Exit Signal Background")

// Display information table
var table info_table = table.new(position.top_right, 2, 5, bgcolor=color.white, border_width=1)
if barstate.islast
    table.cell(info_table, 0, 0, "Timeframe", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 0, str.tostring(timeframe_minutes) + "M", text_color=color.black)
    table.cell(info_table, 0, 1, "SMA Period", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 1, str.tostring(sma_period), text_color=color.black)
    table.cell(info_table, 0, 2, "Supertrend", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 2, str.tostring(st_length) + "," + str.tostring(st_multiplier), text_color=color.black)

    table.cell(info_table, 0, 4, "Position", text_color=color.black, bgcolor=color.gray)
    table.cell(info_table, 1, 4, position_state == 1 ? "Bull Put" : position_state == -1 ? "Bear Call" : "FLAT", 
              text_color=position_state == 1 ? color.green : position_state == -1 ? color.red : color.black)
